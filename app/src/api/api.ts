import { toast } from 'react-toastify'

import { LngLat } from '@interfaces'

import { apiFetch } from './apiFetch'

export const api = {
  startSimulation: async (
    isStarted: boolean,
    setIsStarted: (value: React.SetStateAction<boolean>) => void
  ) => {
    if (!isStarted) {
      try {
        await apiFetch.startSimulation()
        setIsStarted(true)
        toast.success('–°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞ üëå')
      } catch {
        toast.error('–û—à–∏–±–∫–∞! –°–∏–º—É–ª—è—Ü–∏—è –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞')
      }
    } else {
      toast.warn('–°–∏–º—É–ª—è—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞')
    }
  },

  stopSimulation: async (
    isStarted: boolean,
    setIsStarted: (value: React.SetStateAction<boolean>) => void
  ) => {
    if (isStarted) {
      try {
        await apiFetch.stopSimulation()
        setIsStarted(false)
        toast.success('–°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ üëå')
      } catch {
        toast.error('–û—à–∏–±–∫–∞! –°–∏–º—É–ª—è—Ü–∏—è –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
      }
    } else {
      toast.warn('–°–∏–º—É–ª—è—Ü–∏—è –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞')
    }
  },

  deleteMarker: async (id: string) => {
    try {
      await apiFetch.deleteCar(id)
      toast.success('–ú–∞—Ä–∫–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω üëå')
    } catch {
      toast.error('–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
    }
  },

  createMarker: async (data: { name: string }, coordinates?: LngLat) => {
    if (data.name && coordinates) {
      try {
        await apiFetch.createCar({
          ...data,
          coordinates: {
            lng: Number(coordinates?.lng),
            lat: Number(coordinates?.lat)
          }
        })
        toast.success('–ú–∞—Ä–∫–µ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω üëå')
      } catch {
        toast.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
      }
    } else {
      toast.warn('–ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã')
    }
  }
}
